/* eslint-disable max-len */
import {ethers} from 'ethers';

const abi = {
  formatABI: (json) => {
    const FormatTypes = ethers.utils.FormatTypes;
    const iface = new ethers.utils.Interface(json);
    return iface.format(FormatTypes.full);
  },
  vaults: {
    camwmatic: [
      'constructor(address ethPriceSourceAddress, uint256 minimumCollateralPercentage, string name, string symbol, address _mai, address _collateral, address meta, string baseURI)',
      'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',
      'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',
      'event BorrowToken(uint256 vaultID, uint256 amount)',
      'event CreateVault(uint256 vaultID, address creator)',
      'event DepositCollateral(uint256 vaultID, uint256 amount)',
      'event DestroyVault(uint256 vaultID)',
      'event LiquidateVault(uint256 vaultID, address owner, address buyer, uint256 debtRepaid, uint256 collateralLiquidated, uint256 closingFee)',
      'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
      'event PayBackToken(uint256 vaultID, uint256 amount, uint256 closingFee)',
      'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',
      'event WithdrawCollateral(uint256 vaultID, uint256 amount)',
      'function _meta() view returns (address)',
      'function _minimumCollateralPercentage() view returns (uint256)',
      'function approve(address to, uint256 tokenId)',
      'function balanceOf(address owner) view returns (uint256)',
      'function base() view returns (string)',
      'function baseURI() view returns (string)',
      'function borrowToken(uint256 vaultID, uint256 amount)',
      'function changeEthPriceSource(address ethPriceSourceAddress)',
      'function checkCollateralPercentage(uint256 vaultID) view returns (uint256)',
      'function checkCost(uint256 vaultID) view returns (uint256)',
      'function checkExtract(uint256 vaultID) view returns (uint256)',
      'function checkLiquidation(uint256 vaultID) view returns (bool)',
      'function closingFee() view returns (uint256)',
      'function collateral() view returns (address)',
      'function createVault() returns (uint256)',
      'function debtRatio() view returns (uint256)',
      'function depositCollateral(uint256 vaultID, uint256 amount)',
      'function destroyVault(uint256 vaultID)',
      'function ethPriceSource() view returns (address)',
      'function exists(uint256 vaultID) view returns (bool)',
      'function gainRatio() view returns (uint256)',
      'function getApproved(uint256 tokenId) view returns (address)',
      'function getClosingFee() view returns (uint256)',
      'function getDebtCeiling() view returns (uint256)',
      'function getEthPriceSource() view returns (uint256)',
      'function getOpeningFee() view returns (uint256)',
      'function getPaid()',
      'function getTokenPriceSource() view returns (uint256)',
      'function isApprovedForAll(address owner, address operator) view returns (bool)',
      'function isOwner() view returns (bool)',
      'function liquidateVault(uint256 vaultID)',
      'function mai() view returns (address)',
      'function maticDebt(address) view returns (uint256)',
      'function name() view returns (string)',
      'function openingFee() view returns (uint256)',
      'function owner() view returns (address)',
      'function ownerOf(uint256 tokenId) view returns (address)',
      'function payBackToken(uint256 vaultID, uint256 amount)',
      'function renounceOwnership()',
      'function safeTransferFrom(address from, address to, uint256 tokenId)',
      'function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)',
      'function setApprovalForAll(address to, bool approved)',
      'function setBaseURI(string baseURI)',
      'function setClosingFee(uint256 amount)',
      'function setDebtRatio(uint256 _debtRatio)',
      'function setGainRatio(uint256 _gainRatio)',
      'function setMinCollateralRatio(uint256 minimumCollateralPercentage)',
      'function setOpeningFee(uint256 amount)',
      'function setStabilityPool(address _pool)',
      'function setTokenPeg(uint256 _tokenPeg)',
      'function setTreasury(uint256 _treasury)',
      'function stabilityPool() view returns (address)',
      'function supportsInterface(bytes4 interfaceId) view returns (bool)',
      'function symbol() view returns (string)',
      'function tokenByIndex(uint256 index) view returns (uint256)',
      'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',
      'function tokenPeg() view returns (uint256)',
      'function tokenURI(uint256 tokenId) view returns (string)',
      'function totalSupply() view returns (uint256)',
      'function transferFrom(address from, address to, uint256 tokenId)',
      'function transferOwnership(address newOwner)',
      'function transferToken(uint256 amountToken)',
      'function transferToken(address to, address token, uint256 amountToken)',
      'function treasury() view returns (uint256)',
      'function vaultCollateral(uint256) view returns (uint256)',
      'function vaultCount() view returns (uint256)',
      'function vaultDebt(uint256) view returns (uint256)',
      'function withdrawCollateral(uint256 vaultID, uint256 amount)',
    ],
  },
};

export default abi;
